#####################################################################
# 	CHAMBER TEMPERATURE WAIT
#####################################################################

# Wait for chamber temp, kick off wait loop if not already at temp
# !! I created this before temperature_wait existed. The only reason I still ise it is because it's cancelable.
# !! I honestly would not recommend using this, it's really junky,
# !! It pauses the print (if not at temp) during print_start, pausing CANNOT happen (properly at least) in the middle of a macro, so it requires PRINT_START being split into two parts. 
# !! There may be a more graceful way to fix this but I can't be bothered. "There is nothing more permanent than a temporary solution"

[gcode_macro M191]
description: Wait for the chamber temp to reach desired level
variable_chambertargettemp: 0
variable_waittime: 0.0
gcode:
	# Parameters
	{% set s = params.S|default(1)|float %}
	
	SET_GCODE_VARIABLE MACRO=M191 VARIABLE=chambertargettemp VALUE={s}									; set target temp for reference outside of the macro (for the loop)
	SET_GCODE_VARIABLE MACRO=M191 VARIABLE=waittime VALUE=0.0   							

	SET_IDLE_TIMEOUT TIMEOUT=18000																		; change timeout to 5 hrs for soak

	_ECHO_INFO MSG="Chamber currently at {printer["temperature_sensor enclosure_temp"].temperature}C heating to {s}C"						
	{% if not printer["temperature_sensor enclosure_temp"].temperature >= s|float %}					; ##IF CHAMBER TEMP IS NOT ALREADY REACHED##
		_ECHO_INFO MSG="Chamber not at temp yet, pausing..."				
			{% if not printer.pause_resume.is_paused %}					
				BASE_PAUSE														   						; pause if not already paused
			{% endif %}					
		UPDATE_DELAYED_GCODE ID=M191-WAIT DURATION=30						   							; start wait loop
	{% else %}					
		_ECHO_INFO MSG="Chamber at or above temp, continuing..."				     						; ##IF CHAMBER TEMP IS ALREADY REACHED##
		UPDATE_DELAYED_GCODE ID=M191-WAIT DURATION=0                           							; break wait loop if it happens to be running already (shouldn't be)
		{% if printer.pause_resume.is_paused %}					
			BASE_RESUME															   						; resume if paused (shouldn't be)
		{% endif %}					
		PRINT_START2													   								; run part 2 of PRINT_START
	{% endif %}
	
# This part will loop until the desired chamber temp is reached, then resume the print
[delayed_gcode M191-WAIT]
gcode:
    STATUS_HEATING
	{% set calcwaittime = printer["gcode_macro M191"].waittime|float + 0.5 %}
	{% set setpoint = printer["gcode_macro M191"].chambertargettemp|float %}
	SET_GCODE_VARIABLE MACRO=M191 VARIABLE=waittime VALUE={calcwaittime}

	{% if printer["temperature_sensor enclosure_temp"].temperature >= printer["gcode_macro M191"].chambertargettemp|float %} ; ##IF CHAMBER TEMP IS REACHED##
		_ECHO_INFO MSG="Chamber reached {printer["temperature_sensor enclosure_temp"].temperature}C / {setpoint}C after {calcwaittime}min, continuing..."
			{% if printer.pause_resume.is_paused %}
				BASE_RESUME														   											 ; break loop, resume print
				PRINT_START2											   												 ; run part 2 of PRINT_START
			{% endif %}
	{% else %}																											 ; ##IF CHAMBER TEMP IS NOT YET REACHED##
		_ECHO_INFO MSG="Chamber heating {printer["temperature_sensor enclosure_temp"].temperature}C / {setpoint}C after {calcwaittime} min"
		UPDATE_DELAYED_GCODE ID=M191-WAIT DURATION=30						   											 ; continue waiting loop
	{% endif %}


[gcode_macro HEATSOAK]
description: Heat and move printhead to the center and turn on fan for heat soak
gcode:
	# Parameters
	{% set t = params.T|default(90)|int %}
	{% set move = params.MOVE|default(1)|int %}
    STATUS_HEATING
	UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0  ; cancel off timer (if there is one)
	
	M140 S{t}										; heat bed
	{% if t >= 100 %}
		M104 S180									; set hotend to no-ooze temp
		M106 S205 									; turn on part fan (80%)
	{% else %}
		M106 S0 									; turn part fan off
	{% endif %}
	{% if move == 1 %}
		_CG28										; conditional home
		PARKCENTER						 			; move to bed
	{% endif %}