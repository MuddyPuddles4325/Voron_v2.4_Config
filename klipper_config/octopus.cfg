#####################################################################
#    Octopus MCU IO Configuration
#####################################################################
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_1E003B00115053424E363620-if00
restart_method: command

# This file contains common pin mappings for the BigTreeTech OctoPus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

##	[X in MOTOR0] - B Motor
##	[Y in MOTOR1] - A Motor
##	[E in MOTOR6] - Extruder

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on MOTOR0(B Motor)
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: 0
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##	Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 60   #Max 100
second_homing_speed: 5
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: False
run_current: 1.0
#hold_current: 0.7
sense_resistor: 0.110
#stealthchop_threshold: 0

## Y Stepper on MOTOR1 (A Motor)
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
##--------------------------------------------------------------------

##	Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##	Uncomment for 350mm build
position_endstop: 357.5
position_max: 357.5

##--------------------------------------------------------------------
homing_speed: 60  #Max 100
second_homing_speed: 5
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: False
run_current: 1.0
#hold_current: 0.7
sense_resistor: 0.110
#stealthchop_threshold: 0
 
#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR2_1
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64
endstop_pin: PG10
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: 0.6
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
#position_max: 240

##	Uncomment below for 300mm build
#position_max: 290

##	Uncomment below for 350mm build
position_max: 340

##--------------------------------------------------------------------
position_min: -10
homing_speed: 15
second_homing_speed: 3
homing_retract_dist: 1

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: False
run_current: 0.8
#hold_current: 0.8
sense_resistor: 0.110
#stealthchop_threshold: 9999999

##	Z1 Stepper - Rear Left on MOTOR3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: False
run_current: 0.8
#hold_current: 0.8
sense_resistor: 0.110
#stealthchop_threshold: 9999999

##	Z2 Stepper - Rear Right on MOTOR4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: False
run_current: 0.8
#hold_current: 0.80
sense_resistor: 0.110
#stealthchop_threshold: 9999999

##	Z3 Stepper - Front Right on MOTOR5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: False
run_current: 0.8
#hold_current: 0.80
sense_resistor: 0.110
#stealthchop_threshold: 9999999


#####################################################################
# 	Extruder
#####################################################################
[thermistor tl_ATC_104NT-4-R025H42G]
temperature1: 25
resistance1: 100000
# temperature2: 200
# resistance2: 4452
# temperature3: 300
# resistance3: 827.8
#   Three resistance measurements (in Ohms) at the given temperatures
#   (in Celsius). The three measurements will be used to calculate the
#   Steinhart-Hart coefficients for the thermistor. These parameters
#   must be provided when using Steinhart-Hart to define the
#   thermistor.
beta: 4267
#   Alternatively, one may define temperature1, resistance1, and beta
#   to define the thermistor parameters. This parameter must be
#   provided when using "beta" to define the thermistor.

#	E0 on MOTOR6
[extruder]
max_extrude_only_distance: 200.0
max_extrude_cross_section: 50.0
step_pin: PE2
dir_pin: PE3
enable_pin: !PD4
##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.18454996602	#Bondtech 5mm Drive Gears
##	Update Gear Ratio depending on your Extruder Type
##	Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##	Use 80:20 for M4, M3.1
gear_ratio: 50:17				#BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA2
##	Validate the following thermistor type to make sure it is correct
sensor_type: tl_ATC_104NT-4-R025H42G #ATC Semitec 104NT-4-R025H42G
sensor_pin: PF4
min_temp: 0
max_temp: 290
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##	Try to keep pressure_advance below 1.0
pressure_advance: 0.05
##	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

##	E0 on MOTOR6
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PE1
interpolate: false
run_current: 0.6
#hold_current: 0.4
#sense_resistor: 0.110
#stealthchop_threshold: 0


#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - BED_OUT
heater_pin: PA1
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PF3
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
# 	Heater Validation
#####################################################################

[verify_heater heater_bed]
max_error: 120
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 90
#   This controls heater verification during initial heating.  Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

[verify_heater extruder]
max_error: 120
check_gain_time: 20
hysteresis: 5
heating_gain: 2

#####################################################################
# 	Fan Control
#####################################################################

[fan]
##	Print Cooling Fan - CNC_FAN0
pin: PA8
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10
cycle_time: 0.05

[heater_fan hotend_fan]
##	Hotend Fan - CNC_FAN1
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[multi_pin controller_fans]
pins: PD13, PD14

[controller_fan controller_fan]
##	Controller fan - CNC_FAN2
pin: multi_pin:controller_fans
max_power: 1.0
kick_start_time: 0.5
cycle_time: 0.05
heater: heater_bed, extruder
fan_speed: 0.6
shutdown_speed: 0.0

[fan_generic nevermore]
##	Fan for nevermore airfilter
pin: PD15
kick_start_time: 0.5
cycle_time: 0.05

# [fan_generic exhaust_fan]
# ##	Exhaust fan - CNC_FAN3
# pin: PD12
# kick_start_time: 0.5
# cycle_time: 0.05

#######################################
#### Enclosure Temp Sensor Section ####
#######################################
[thermistor chamber_temp]
temperature1: 25
resistance1: 10000
beta: 3950

[temperature_sensor enclosure_temp]
sensor_type: chamber_temp
sensor_pin: PF5
min_temp: 0
max_temp: 100
gcode_id: C

[temperature_sensor MCU]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100
gcode_id: E

# [filament_motion_sensor filament_sensor]
# detection_length: 7
# extruder: extruder
# switch_pin: PG12
# pause_on_runout: False
# #insert_gcode:
# runout_gcode:
# 	M600

# [filament_switch_sensor toolhead_sensor]
# pause_on_runout: False
# switch_pin: ^PG13

#####################################################################
# 	LED Control
#####################################################################

[output_pin caselight]
#Chamber Lighting - HE1 Connector (Optional)
pin: PA3
pwm:true
shutdown_value: 0
value:1
cycle_time: 0.01

########################################
# EXP1 / EXP2 (display) pins
########################################

# [board_pins]
# aliases:
#     # EXP1 header
#     EXP1_1=PE8, EXP1_2=PE7,
#     EXP1_3=PE9, EXP1_4=PE10,
#     EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
#     EXP1_7=PE14, EXP1_8=PE15,
#     EXP1_9=<GND>, EXP1_10=<5V>,

#     # EXP2 header
#     EXP2_1=PA6, EXP2_2=PA5,
#     EXP2_3=PB1, EXP2_4=PA4,
#     EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
#     EXP2_7=PC15, EXP2_8=<RST>,
#     EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

# [display]
# #	mini12864 LCD Display
# lcd_type: uc1701
# cs_pin: EXP1_3
# a0_pin: EXP1_4
# rst_pin: EXP1_5
# encoder_pins: ^EXP2_5, ^EXP2_3
# click_pin: ^!EXP1_2
# contrast: 63
# spi_software_miso_pin: EXP2_1
# spi_software_mosi_pin: EXP2_6
# spi_software_sclk_pin: EXP2_2
# display_group: __voron_display

# [neopixel btt_mini12864]
# #	To control Neopixel RGB in mini12864 display
# pin: EXP1_6
# chain_count: 3
# initial_RED: 1.0
# initial_GREEN: 0.0
# initial_BLUE: 0.0
# color_order: RGB

# #	Set RGB values on boot up for each Neopixel. 
# #	Index 1 = display, Index 2 and 3 = Knob
# [delayed_gcode setdisplayneopixel]
# initial_duration: 1
# gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

# #--------------------------------------------------------------------

# [display_glyph voron]
# data:
#    .......**.......
#    .....******.....
#    ....********....
#    ..************..
#    .*****..**..***.
#    .****..**..****.
#    .***..**..*****.
#    .**..**..******.
#    .******..**..**.
#    .*****..**..***.
#    .****..**..****.
#    .***..**..*****.
#    ..************..
#    ....********....
#    .....******.....
#    .......**.......

# [display_template _vheater_temperature]
# param_heater_name: "extruder"
# text:
#   {% if param_heater_name in printer %}
#     {% set heater = printer[param_heater_name] %}
#     # Show glyph
#     {% if param_heater_name == "heater_bed" %}
#       {% if heater.target %}
#         {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
#         ~bed_heat{frame}~
#       {% else %}
#         ~bed~
#       {% endif %}
#     {% else %}
#       ~extruder~
#     {% endif %}
#     # Show temperature
#     { "%3.0f" % (heater.temperature,) }
#     # Optionally show target
#     {% if heater.target and (heater.temperature - heater.target)|abs > 2 %}
#       ~right_arrow~
#       { "%0.0f" % (heater.target,) }
#     {% endif %}
#     ~degrees~
#   {% endif %}

# [display_data __voron_display extruder]
# position: 0, 0
# text: { render("_vheater_temperature", param_heater_name="extruder") }

# [display_data __voron_display fan]
# position: 0, 10
# text:
#   {% if 'fan' in printer %}
#     {% set speed = printer.fan.speed %}
#     {% if speed %}
#       {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
#       ~fan{frame}~
#     {% else %}
#       ~fan1~
#     {% endif %}
#     { "{:>4.0%}".format(speed) }
#   {% endif %}

# [display_data __voron_display bed]
# position: 1, 0
# text: { render("_vheater_temperature", param_heater_name="heater_bed") }

# [display_data __voron_display feed_rate]
# position: 1, 10
# text:
#   {% set frate = printer.gcode_move.extrude_factor %}
#   ~feedrate~
#   { "%03d%%" % (frate * 100) }

# [display_data __voron_display progress_text]
# #position: 1, 10
# position: 2, 0
# text:
#   {% set progress = printer.display_status.progress %}
#   { "{:^10.0%}".format(progress) }
  
# [display_data __voron_display progress_text2]
# #position: 1, 10
# position: 2, 0
# text:
#   {% set progress = printer.display_status.progress %}
# #  { draw_progress_bar(1, 10, 6, progress) }
#   { draw_progress_bar(2, 0, 10, progress) }

# [display_data __voron_display printing_time]
# position: 2, 11
# text:
#   {% set ptime = printer.idle_timeout.printing_time %}
#   { "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }

# #########################################################
# # This section defines the actual chamber temp. field,
# # replace 'temperature_sensor chamber' as necessary
# #########################################################
# [display_data __voron_display chamber]
# position: 2, 0
# text:
#  {% set chamber = printer['enclosure_temp'] %}
# 	~chamber~
# 	{ "%3.0f" % (chamber.temperature,) }
# 	~degrees~   

# [display_data __voron_display print_status]
# position: 3, 0
# text: 
#   {% if printer.display_status.message %}
#     { printer.display_status.message }
#   {% elif printer.idle_timeout.printing_time %}
#     {% set pos = printer.toolhead.position %}
#     { "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }
#   {% else %}
#   ~voron~
#     { " VS.087 " }
#   {% endif %}
    
# [menu __main __octoprint]
# type: list
# enable: False
# name: OctoPrint

# [menu __main __actions]
# type: list
# name: Actions
# index: 0

# [menu __main __actions __pause]
# type: command
# enable: {printer.idle_timeout.state == "Printing"}
# name: Pause printing
# gcode:
#   PAUSE

# [menu __main __actions __resume]
# type: command
# enable: {not printer.idle_timeout.state == "Printing"}
# name: Resume printing
# gcode:
#   RESUME

# [menu __main __actions __abort]
# type: command
# enable: {printer.idle_timeout.state == "Printing"}
# name: Abort printing
# gcode:
#   CANCEL_PRINT

#####################################################################
# 	Macros
#####################################################################
    
## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

